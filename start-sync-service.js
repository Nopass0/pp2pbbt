#!/usr/bin/env bun

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Bybit —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Bun
const { execSync } = require('child_process');
const path = require('path');
const fs = require('fs');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Bun
try {
  execSync('bun --version', { stdio: 'ignore' });
  console.log('‚úÖ Bun —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞: Bun –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Bun: https://bun.sh');
  process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Prisma –∫–ª–∏–µ–Ω—Ç
try {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è node_modules/.prisma
  if (!fs.existsSync(path.join(__dirname, 'node_modules', '.prisma'))) {
    console.log('üì¶ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞...');
    execSync('bun prisma generate', { stdio: 'inherit', cwd: __dirname });
    console.log('‚úÖ Prisma –∫–ª–∏–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
  }
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Prisma –∫–ª–∏–µ–Ω—Ç–∞:', error);
  process.exit(1);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é —Å TypeScript
try {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Bybit...');
  // Bun –º–æ–∂–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å TypeScript —Ñ–∞–π–ª—ã –Ω–∞–ø—Ä—è–º—É—é, –±–µ–∑ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
  execSync('bun run sync-service.ts', { stdio: 'inherit', cwd: __dirname });
} catch (error) {
  console.error('‚ùå –°–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error);
}
